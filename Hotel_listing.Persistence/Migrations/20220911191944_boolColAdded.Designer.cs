// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using DatabaseContext = Hotel_listing.Persistence.DatabaseContext;

#nullable disable

namespace Hotel_listing.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20220911191944_boolColAdded")]
    partial class boolColAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hotel_listing.Domain.Entitites.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsEuropeCountry")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsEuropeCountry = false,
                            Name = "Albania",
                            ShortName = "AL"
                        },
                        new
                        {
                            Id = 2,
                            IsEuropeCountry = false,
                            Name = "Germany",
                            ShortName = "DU"
                        },
                        new
                        {
                            Id = 3,
                            IsEuropeCountry = false,
                            Name = "Italy",
                            ShortName = "IT"
                        },
                        new
                        {
                            Id = 4,
                            IsEuropeCountry = false,
                            Name = "England",
                            ShortName = "EN"
                        });
                });

            modelBuilder.Entity("Hotel_listing.Domain.Entitites.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Adrsess")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("CountryId")
                        .IsRequired()
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adrsess = "Hotel 1 street",
                            CountryId = 1,
                            Name = "Hotel 1",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 2,
                            Adrsess = "Hotel 2 street",
                            CountryId = 2,
                            Name = "Hotel 2",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 3,
                            Adrsess = "Hotel 3 street",
                            CountryId = 3,
                            Name = "Hotel 3",
                            Rating = 4.7999999999999998
                        },
                        new
                        {
                            Id = 4,
                            Adrsess = "Hotel 4 street",
                            CountryId = 4,
                            Name = "Hotel 4",
                            Rating = 4.7999999999999998
                        });
                });

            modelBuilder.Entity("Hotel_listing.Domain.Entitites.Hotel", b =>
                {
                    b.HasOne("Hotel_listing.Domain.Entitites.Country", "Country")
                        .WithMany("Hotels")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Hotel_listing.Domain.Entitites.Country", b =>
                {
                    b.Navigation("Hotels");
                });
#pragma warning restore 612, 618
        }
    }
}
